import math


def cos_taylor(x, terms=10):
    '''
    Вычисление косинуса числа х с использованием ряда Тейлора.

    Эта функция вычисляет приближенное значение косинуса числа x, используя
    разложение в ряд Тейлора. Для точности вычислений используется заданное
    количество членов ряда (по умолчанию 10).

    Аргументы:
    x - число (в радианах), для которого нужно вычислить косинус.
    terms - количество членов ряда Тейлора, которые используются для вычислений (по умолчанию 10).

    Возвращаемое значение:
    float - приближенное значение косинуса числа x.

    Исключения:
    Отсутствуют.

    Пример:
    >>> cos_taylor(0)
    1.0
    >>> cos_taylor(math.pi/3)
    0.5000000000000001
    '''
    cos = 0
    for n in range(terms):
        term = ((-1) ** n * x ** (2 * n)) / math.factorial(2 * n)
        cos += term
    return cos

def arctan_taylor_series(x, terms=10):
    '''
    Вычисление арктангенса числа x с использованием ряда Тейлора.

    Эта функция вычисляет приближенное значение арктангенса числа x, используя
    разложение в ряд Тейлора. При этом x должно быть в пределах от -1 до 1
    (включительно). Для точности вычислений используется заданное количество
    членов ряда (по умолчанию 10).

    Аргументы:
    x - число (в интервале [-1, 1]), для которого нужно вычислить арктангенс.
    terms -- количество членов ряда Тейлора, которые используются для вычислений (по умолчанию 10).

    Возвращаемое значение:
    float - приближенное значение арктангенса числа x.

    Исключения:
    ValueError - если x не находится в пределах от -1 до 1.

    Пример:
    >>> arctan_taylor_series(0)
    0.0
    >>> arctan_taylor_series(0.5)
    0.4636476090008061
    '''
    if not -1 <= x <= 1:
        raise ValueError("x должно быть в диапазоне [-1, 1]")
    result = 0
    for n in range(terms):
        term = ((-1) ** n * x ** (2 * n + 1)) / (2 * n + 1)
        result += term
    return result

